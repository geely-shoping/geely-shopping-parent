<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geely.dao.CollectTbMapper">
  <resultMap id="BaseResultMap" type="com.geely.entity.CollectTb">
    <!--@mbg.generated-->
    <id column="collect_id" jdbcType="INTEGER" property="collectId" />
    <result column="collect_product" jdbcType="INTEGER" property="collectProduct" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    collect_id, collect_product, modified_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from collect_tb
    where collect_id = #{collectId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from collect_tb
    where collect_id = #{collectId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="collect_id" keyProperty="collectId" parameterType="com.geely.entity.CollectTb" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into collect_tb (collect_product, modified_time)
    values (#{collectProduct,jdbcType=INTEGER}, #{modifiedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="collect_id" keyProperty="collectId" parameterType="com.geely.entity.CollectTb" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into collect_tb
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collectProduct != null">
        collect_product,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collectProduct != null">
        #{collectProduct,jdbcType=INTEGER},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.geely.entity.CollectTb">
    <!--@mbg.generated-->
    update collect_tb
    <set>
      <if test="collectProduct != null">
        collect_product = #{collectProduct,jdbcType=INTEGER},
      </if>
      <if test="modifiedTime != null">
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geely.entity.CollectTb">
    <!--@mbg.generated-->
    update collect_tb
    set collect_product = #{collectProduct,jdbcType=INTEGER},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP}
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update collect_tb
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="collect_product = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when collect_id = #{item.collectId,jdbcType=INTEGER} then #{item.collectProduct,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="modified_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when collect_id = #{item.collectId,jdbcType=INTEGER} then #{item.modifiedTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where collect_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.collectId,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="collect_id" keyProperty="collectId" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into collect_tb
    (collect_product, modified_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.collectProduct,jdbcType=INTEGER}, #{item.modifiedTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>

  <select id="listByCollectTb" resultMap="BaseResultMap">
    select collect_id, collect_product, modified_time from collect_tb
  </select>

  <delete id="batchDelete">
    delete from collect_tb
    where collect_id in
    <foreach collection="list" item="id" separator="," open="(" close=")">
      #{id,jdbcType=INTEGER}
    </foreach>
  </delete>
</mapper>